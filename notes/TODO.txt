Tariffs - Done:
Store all tarrifs in flash. which means I have to expand flash to support more sectors. We need 20 bytes of space: (32 bits / 8) = 4 bytes * 5 = 20 bytes needed.
Use 3 sectors now instead of 1 (24 bytes).

Getting Tarrifs from Flash - have to store in fixed point
use 32Q24: 32 bits, 24 for fractional. Supprot tarrifs up to $256 ask if we need more.
resources:
https://stackoverflow.com/questions/3402702/converting-floating-point-to-32-bit-fixed-point-in-java
https://stackoverflow.com/questions/10067510/fixed-point-arithmetic-in-c-programming
https://stackoverflow.com/questions/79677/whats-the-best-way-to-do-fixed-point-math



convert the sampling interval to be defined at runtime rather than compile time

Expanding Flash:
to determine sector divide address offset by 8


Switch for toggling output:
Ch11 for port interrpts
CH59 for GPIO



Tower crashes on first run (or after building and flashing)
	-Probably has to do with writing the tariffs on start up.
	-There is an access error FSTAT[ACCERR] idk why lol
	
Ask if the tower should store the loaded tarrif
	Seems like we're just gonna store the tarrif to use. 